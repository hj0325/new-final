/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import * as THREE from 'three'

export default function Ax({ isHovered, onHover }) {
  const meshRef = useRef()
  const { scene } = useGLTF('/Ax.gltf')
  const targetRotation = useRef(0)
  const currentRotation = useRef(0)

  useFrame(() => {
    if (isHovered) {
      targetRotation.current = Math.PI / 4 // 45도 (라디안)
    } else {
      targetRotation.current = 0
    }

    // 부드러운 회전을 위한 보간
    currentRotation.current = THREE.MathUtils.lerp(
      currentRotation.current,
      targetRotation.current,
      0.1
    )

    meshRef.current.rotation.x = currentRotation.current
  })

  return (
    <mesh
      ref={meshRef}
      onPointerEnter={() => onHover(true)}
      onPointerLeave={() => onHover(false)}
    >
      <primitive object={scene} scale={1} position={[0, 0, 0]} />
    </mesh>
  )
}

useGLTF.preload('/Ax.gltf')
